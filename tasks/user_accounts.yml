- block:
  - name: ({{ i_user.name }}) package > install {{ i_user.shell }}
    package:
      name: "{{ i_user.shell }}"
    when: i_user.shell is defined

  - name: ({{ i_user.name }}) set_fact > get latest user password to update current become sudo passwd
    set_fact:
      t_password: "{{ i_user.passwd if vault.user[i_user.name].wanted is not defined
                      else vault.user[i_user.name].wanted }}"

  - name: ({{ i_user.name }}) set_fact > get hash password
    set_fact:
      t_hash_passwd: "{{ t_password if (t_password | regex_search('^\\$6'))
                         else t_password | password_hash('sha512') }}"

  - name: ({{ i_user.name }}) set_fact > join groups name
    set_fact:
      t_groups: "{{ i_user.groups | join(',') }}"
    when: i_user.groups is defined

  - name: ({{ i_user.name }}) user > setup users
    user:
      name:            "{{ i_user.name       }}"
      password:        "{{ t_hash_passwd     }}"
      group:           "{{ i_user.group      | default(i_user.name) }}"
      groups:          "{{ t_groups          | default(omit)        }}"
      # append:          "{{ i_user.append if (i_user.append is defined and t_groups is defined) else omit }}"
      append:          "{{ i_user.append     | default(false)       }}"    ## test if true works when there is no groups
      uid:             "{{ '0' if i_user.name == 'root' else i_user.uid  }}"
      shell:           "/bin/{{ 'false' if (i_user.shell is defined and not i_user.shell) else (i_user.shell | default(user_shell)) }}"  # /bin/false if user.shell: false else /bin/user.shell
      update_password: "{{ i_user.update_passwd | default('always') }}"
      create_home:     "{{ i_user.home       | default(true)      }}"
      skeleton:        "{{ i_user.skeleton   | default(false)     }}"
      non_unique:      "{{ i_user.non_unique | default(false)     }}"
      system:          "{{ i_user.system     | default(false)     }}"
      expires:         "{{ i_user.expires    | default(omit)      }}"
      state:           "{{ i_user.state      | default('present') }}"

  tags: users, user_accounts
